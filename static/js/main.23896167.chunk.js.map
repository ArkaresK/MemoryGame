{"version":3,"sources":["header.js","card.js","game.js","index.js"],"names":["View","className","React","Component","Card","props","state","Image","this","click","close","complete","onClick","clicked","src","alt","PlayGround","cardImage","duplicatedCards","randomizedCards","finalizedCards","openedCards","score","matchedCards","win","minutes","seconds","millis","running","page1","page2","page3","name","pairs","IsNext","playingvsbot","handleClick","bind","handleStartClick","handleStopClick","handleChange","handleSubmit","easy","normal","hard","start","Bot","solo","playingBot","event","setState","target","value","preventDefault","interval","setInterval","tick","clearInterval","update","index","console","log","length","setTimeout","check","push","currentIndex","randomIndex","Math","floor","random","randomIndex2","document","getElementsByClassName","shuffle","concat","map","fail","array","temporaryValue","points_bonus","onSubmit","type","onChange","required","PrintWinner","zeroPad","href","loadPage3","body","style","height","Fragment","login_page","difficulty_page","bot_page","game_page","ReactDOM","render","querySelector","getElementById"],"mappings":"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","file":"static/js/main.23896167.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nexport default class View extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <header className=\"header\">\r\n                    <div className=\"title\">Memory Game</div>\r\n                </header> \r\n                             \r\n            </div>);\r\n    }\r\n  }","\r\nimport React from 'react';\r\nexport default class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n      }\r\n    clicked(Image){\r\n      this.props.click(Image)\r\n    }\r\n    render(){\r\n      return (\r\n        <div className={\"card\" + (!this.props.close ? ' opened' : '') + (this.props.complete ? ' matched' : '')} onClick={() => this.clicked(this.props.Image)}>\r\n          <div className=\"front\">\r\n          </div>\r\n          <div className=\"back\">\r\n            <img src={/*akali */\"https://raw.githubusercontent.com/ArkaresK/memorygmae/master/static/icons/\" \r\n            + this.props.Image + \".png\"} alt={this.props.Image}/>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\nimport Card from './card'\r\n\r\n\r\nexport default class PlayGround extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cardImage: ['Aatrox', 'Ashe', 'Bard', 'Caitlyn', 'Darius', 'Ekko', 'Ezreal', 'Irelia', 'Jhin', 'Mordekaiser', 'Nasus', 'Nautilus', 'Pyke', 'Shen', 'Talon',\r\n                'Lux', 'Master_Yi', 'Riven', 'Sion', 'Swain', 'Twisted_Fate', 'Vayne', 'Vladimir', 'Xin_Zhao', 'Yasuo'],\r\n            duplicatedCards: [],\r\n            randomizedCards: [],\r\n            finalizedCards: [],\r\n            openedCards: [],\r\n            score: 0,\r\n            matchedCards: 0,\r\n            win: false,\r\n            /* Timer */\r\n            minutes: 0,\r\n            seconds: 0,\r\n            millis: 0,\r\n            running: false,\r\n\r\n            page1: true,\r\n            page2: false,\r\n            page3: false,\r\n\r\n            name: '',\r\n            pairs: 15,\r\n            IsNext: 'human',\r\n            playingvsbot: 'false',\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleStartClick = this.handleStartClick.bind(this);\r\n        this.handleStopClick = this.handleStopClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.easy = this.easy.bind(this);\r\n        this.normal = this.normal.bind(this);\r\n        this.hard = this.hard.bind(this);\r\n        this.start = this.start.bind(this)\r\n        this.Bot = this.Bot.bind(this)\r\n        this.solo = this.solo.bind(this)\r\n        this.playingBot = this.playingBot.bind(this)\r\n\r\n    }\r\n    /* Pseudo */\r\n    handleChange(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ page1: false, page2: true });\r\n    }\r\n\r\n\r\n    /* Timer*/\r\n    handleStartClick() {\r\n        if (!this.state.running) {\r\n            this.interval = setInterval(() => {\r\n                this.tick();\r\n            }, 100)\r\n\r\n            this.setState({ running: true })\r\n        }\r\n    }\r\n\r\n    handleStopClick() {\r\n        if (this.state.running) {\r\n            clearInterval(this.interval);\r\n            this.setState({ running: false })\r\n        }\r\n    }\r\n\r\n\r\n    tick() {\r\n        let millis = this.state.millis + 1;\r\n        let seconds = this.state.seconds;\r\n        let minutes = this.state.minutes;\r\n\r\n        if (millis === 10) {\r\n            millis = 0;\r\n            seconds = seconds + 1;\r\n        }\r\n\r\n        if (seconds === 60) {\r\n            millis = 0;\r\n            seconds = 0;\r\n            minutes = minutes + 1;\r\n        }\r\n\r\n        this.update(millis, seconds, minutes);\r\n    }\r\n\r\n    zeroPad(value) {\r\n        return value < 10 ? `0${value}` : value;\r\n    }\r\n\r\n    update(millis, seconds, minutes) {\r\n        this.setState({\r\n            millis: millis,\r\n            seconds: seconds,\r\n            minutes: minutes\r\n        });\r\n    }\r\n\r\n\r\n    /*Game*/\r\n\r\n    handleClick(name, index) {\r\n        console.log(name);\r\n        console.log(index);\r\n        console.log(this.state.finalizedCards)\r\n        this.handleStartClick();\r\n        if (this.state.openedCards.length === 2) {\r\n            setTimeout(() => {\r\n                this.check();\r\n\r\n            }, 750);\r\n\r\n\r\n        } else {\r\n            let Image = {\r\n                name,\r\n                index\r\n            }\r\n            let finalizedCards = this.state.finalizedCards\r\n            let cardImage = this.state.openedCards\r\n            finalizedCards[index].close = false\r\n            cardImage.push(Image)\r\n            this.setState({\r\n                openedCards: cardImage,\r\n                finalizedCards: finalizedCards\r\n            })\r\n            if (this.state.openedCards.length === 2) {\r\n                setTimeout(() => {\r\n                    this.check()\r\n                }, 750);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    Bot() {\r\n        let currentIndex = this.state.finalizedCards.length;\r\n        let randomIndex = Math.floor(Math.random() * currentIndex);\r\n        let randomIndex2 = Math.floor(Math.random() * currentIndex);\r\n        if (this.state.IsNext === 'bot') {\r\n            setTimeout(() => {\r\n                document.getElementsByClassName('card')[randomIndex2].click()\r\n            document.getElementsByClassName('card')[randomIndex].click()  \r\n            }, 750);\r\n            \r\n        }\r\n    }\r\n\r\n    check() {\r\n        this.state.IsNext === 'human' ? this.setState({IsNext : 'bot'}) : this.setState({IsNext : 'human'});\r\n        let finalizedCards = this.state.finalizedCards\r\n        if ((this.state.openedCards[0].name === this.state.openedCards[1].name) && (this.state.openedCards[0].index !== this.state.openedCards[1].index)) {\r\n            finalizedCards[this.state.openedCards[0].index].complete = true\r\n            finalizedCards[this.state.openedCards[1].index].complete = true\r\n            this.setState({ score: this.state.score + 3 })\r\n            this.setState({ matchedCards: this.state.matchedCards + 1 })\r\n            if (this.state.matchedCards === this.state.cardImage.length) { this.setState({win : true}) }\r\n        } else {\r\n            finalizedCards[this.state.openedCards[0].index].close = true\r\n            finalizedCards[this.state.openedCards[1].index].close = true\r\n            this.setState({ score: this.state.score <= 0 ? this.state.score : this.state.score - 1 })\r\n        }\r\n        this.setState({\r\n            finalizedCards,\r\n            openedCards: []\r\n        });\r\n        if (this.state.playingvsbot) { this.Bot() };\r\n    }\r\n    start() {\r\n        this.state.cardImage = this.shuffle(this.state.cardImage)\r\n        this.state.cardImage.length = this.state.pairs;\r\n        let finalizedCards = [];\r\n        this.state.duplicatedCards = this.state.cardImage.concat(this.state.cardImage)\r\n        this.state.randomizedCards = this.shuffle(this.state.duplicatedCards)\r\n        this.state.randomizedCards.map((name) => {\r\n            finalizedCards.push({\r\n                name,\r\n                close: true,\r\n                complete: false,\r\n                fail: false\r\n            })\r\n        })\r\n        this.state.finalizedCards = finalizedCards;\r\n        console.log(this.start.duplicatedCards)\r\n\r\n    }\r\n    shuffle(array) {\r\n        let currentIndex = array.length, temporaryValue, randomIndex;\r\n        while (0 !== currentIndex) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n        return array\r\n    }\r\n\r\n    /* Render */\r\n    PrintWinner() {\r\n        if (this.state.win) {\r\n            this.handleStopClick();\r\n            const points_bonus = this.state.pairs === 6 ? (this.state.seconds <= 30 ? 3 : 0) : this.state.pairs === 12 ? \r\n                (this.state.seconds <= 50 ? 3 : 0) : this.state.pairs === 15 ? (this.state.minutes <= 2 ? 3 : 0) : 0;\r\n            return (\r\n                <div className=\"victory\">Bien Joué {this.state.name} ! <br></br>Tu as Gagné avec {this.state.score + points_bonus} points  dont {points_bonus} points bonus et un temps de {this.state.minutes < 1 ? '' : this.state.minutes + 'minutes '} {this.state.seconds} secondes\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    login_page() {\r\n        return (\r\n            <div className=\"page1\">\r\n                <div className=\"page_title\">Bienvenue sur le jeu Memory Game réalisé en Reactjs</div>\r\n                <div className=\"rule\">\r\n                    <ul className=\"rules\">Les règles du jeu :\r\n                        <li>Le joueur doit retourner 2 cartes identiques afin de remporter la paire</li>\r\n                        <li>Retourner 2 cartes identiques rapporte 3 points</li>\r\n                        <li>Retourner 2 cartes différentes fait perdre 1 points (toutefois, le score ne peut descendre en dessous de 0)</li>\r\n                        <li>Terminer rapidement la partie rapporte des points supplémentaires</li>\r\n                        <li>Le chronomètre se lancera automatiquement après la première carte retourné</li>\r\n                        <li>Récupérer toutes les paires du plateau afin de gagner</li>\r\n                    </ul>\r\n                </div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Pseudo :<br></br>\r\n                        <input type=\"text\" value={this.state.name} onChange={this.handleChange} required />\r\n                    </label><br></br>\r\n                    <input type=\"submit\" value=\"Jouer\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    game_page() {\r\n        return (<div>\r\n                    {this.state.win ? this.PrintWinner() :\r\n                        <div className=\"txt\">Pseudo : {this.state.name}\r\n                            <div className=\"segments\">\r\n                                <span className=\"mins\">Timer : {this.zeroPad(this.state.minutes)}:</span>\r\n                                <span className=\"secs\">{this.zeroPad(this.state.seconds)} </span>\r\n                                <span className=\"millis\">.{this.state.millis}</span>\r\n                            </div>\r\n                            <div className=\"score\"> Score : {this.state.score}</div>\r\n                        </div>\r\n                    }\r\n                    <div className=\"playground\">\r\n                        {\r\n                            this.state.finalizedCards.map((Image, index) => {\r\n                                return <Card Image={Image.name} click={() => { this.handleClick(Image.name, index) }} close={Image.close} complete={Image.complete} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n    bot_page() {\r\n        return (\r\n            <div className=\"difficulty\">\r\n                Choisir la difficulté de la partie :\r\n                <div>\r\n                    <a href=\"# \" onClick={this.playingBot}>\r\n                        <p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Jouer contre l'ordinateur</span></p>\r\n                    </a>\r\n                    <a className=\"transparent\" href=\"# \" onClick={this.solo}>\r\n                        <p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Jouer seul</span></p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    playingBot() {\r\n        this.setState({ page3: false });\r\n        this.setState({playingvsbot : true});\r\n        console.log(this.state.playingvsbot)\r\n    }\r\n    solo() {\r\n        this.setState({ page3: false });\r\n        this.setState({playingvsbot : false});\r\n        console.log(this.state.playingvsbot)\r\n    }\r\n    loadPage3() {\r\n        this.setState({ page2: false, page3: true });\r\n    }\r\n    easy() {\r\n        this.state.pairs = 6;\r\n        this.loadPage3();\r\n        this.start();\r\n    }\r\n    normal() {\r\n        this.state.pairs = 12;\r\n        this.loadPage3();\r\n        this.start();\r\n    }\r\n    hard() {\r\n        document.body.style.height = \"1200px\";\r\n        this.state.pairs = 15;\r\n        this.loadPage3();\r\n        this.start();\r\n    }\r\n    difficulty_page() {\r\n        return (\r\n            <div className=\"difficulty\">\r\n                Choisir la difficulté de la partie :\r\n                <div>\r\n                    <a href=\"# \" onClick={this.easy}>\r\n                        <p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Facile : 6 paires</span></p>\r\n                    </a>\r\n                    <a className=\"white\" href=\"# \" onClick={this.normal}>\r\n                        <p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Moyen : 12 paires</span></p>\r\n                    </a>\r\n                    <a className=\"transparent\" href=\"# \" onClick={this.hard}>\r\n                        <p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Difficile : 15 paires</span></p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.page1 ? this.login_page() : this.state.page2 ? this.difficulty_page() : this.state.page3 ? this.bot_page() : this.game_page()}\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport View from './header'\nimport PlayGround from './game'\nimport './index.css'\n\nReactDOM.render(<View />, document.querySelector('#header'));\n\nReactDOM.render( <PlayGround/>, document.getElementById('game'))\n/*\nReactDOM.render(\n  <footer class=\"footer\"><div className=\"title\">This Project was developped for school graduation</div>\n  </footer>, document.getElementById('footer'))*/\n\n"],"sourceRoot":""}