{"version":3,"sources":["index.js"],"names":["PlayGround","props","state","cardImage","duplicatedCards","randomizedCards","finalizedCards","openedCards","start","name","index","this","length","setTimeout","check","framework","close","push","setState","complete","concat","shuffle","map","fail","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","className","Card","click","handleClick","React","Component","onClick","clicked","src","alt","ReactDOM","render","document","getElementById"],"mappings":"2MAMMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,UAAW,CAAC,WAAW,MAAM,QAAQ,QAAQ,YAAY,QAAQ,QAAQ,QAAQ,OAAO,SAAS,SAAS,OAAO,SAAS,QAAQ,cAClIC,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,IAEf,EAAKC,QATU,E,wDAWLC,EAAKC,GAAO,IAAD,OACrB,GAAqC,IAAlCC,KAAKT,MAAMK,YAAYK,OACxBC,YAAW,WACT,EAAKC,UACL,SACE,CACJ,IAAIC,EAAY,CACdN,OACAC,SAEEJ,EAAiBK,KAAKT,MAAMI,eAC5BH,EAAYQ,KAAKT,MAAMK,YAC3BD,EAAeI,GAAOM,OAAQ,EAC9Bb,EAAUc,KAAKF,GACfJ,KAAKO,SAAS,CACZX,YAAaJ,EACbG,eAAgBA,IAEmB,IAAlCK,KAAKT,MAAMK,YAAYK,QACxBC,YAAW,WACT,EAAKC,UACL,Q,8BAKN,IAAIR,EAAiBK,KAAKT,MAAMI,eAC5BK,KAAKT,MAAMK,YAAY,GAAGE,OAASE,KAAKT,MAAMK,YAAY,GAAGE,MAAUE,KAAKT,MAAMK,YAAY,GAAGG,QAAUC,KAAKT,MAAMK,YAAY,GAAGG,OACvIJ,EAAeK,KAAKT,MAAMK,YAAY,GAAGG,OAAOS,UAAW,EAC3Db,EAAeK,KAAKT,MAAMK,YAAY,GAAGG,OAAOS,UAAW,IAE3Db,EAAeK,KAAKT,MAAMK,YAAY,GAAGG,OAAOM,OAAQ,EACxDV,EAAeK,KAAKT,MAAMK,YAAY,GAAGG,OAAOM,OAAQ,GAE1DL,KAAKO,SAAS,CACZZ,iBACAC,YAAa,O,8BAIf,IAAID,EAAiB,GACrBK,KAAKT,MAAME,gBAAkBO,KAAKT,MAAMC,UAAUiB,OAAOT,KAAKT,MAAMC,WACpEQ,KAAKT,MAAMG,gBAAkBM,KAAKU,QAAQV,KAAKT,MAAME,iBACrDO,KAAKT,MAAMG,gBAAgBiB,KAAI,SAACb,GAC9BH,EAAeW,KAAK,CAClBR,OACAO,OAAO,EACPG,UAAU,EACVI,MAAM,OAGVZ,KAAKT,MAAMI,eAAiBA,I,8BAEtBkB,GAEN,IADA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMZ,OAClB,IAAMe,GACXD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,I,+BAEA,IAAD,OAEN,OACE,qBAAKO,UAAU,aAAf,SAEMpB,KAAKT,MAAMI,eAAegB,KAAI,SAACP,EAAWL,GACxC,OAAO,cAACsB,EAAD,CAAMjB,UAAWA,EAAUN,KAAMwB,MAAO,WAAO,EAAKC,YAAYnB,EAAUN,KAAKC,IAASM,MAAOD,EAAUC,MAAOG,SAAUJ,EAAUI,oB,GAlFlIgB,IAAMC,YA0FzBJ,E,kDACJ,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,oDAMXa,GACNJ,KAAKV,MAAMgC,MAAMlB,K,+BAEV,IAAD,OACN,OACE,sBAAKgB,UAAW,QAAWpB,KAAKV,MAAMe,MAAoB,GAAZ,YAAmBL,KAAKV,MAAMkB,SAAW,WAAa,IAAKkB,QAAS,kBAAM,EAAKC,QAAQ,EAAKrC,MAAMc,YAAhJ,UACE,qBAAKgB,UAAU,UAEf,qBAAKA,UAAU,OAAf,SACE,qBAAKQ,IAAK,6FAA+F5B,KAAKV,MAAMc,UAAY,OAAQyB,IAAK7B,KAAKV,MAAMc,qB,GAhB/IoB,IAAMC,WAuBzBK,IAASC,OAAQ,cAAC1C,EAAD,IAAe2C,SAASC,eAAe,U","file":"static/js/main.2c0476e1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/*import App from './App';\nimport reportWebVitals from './reportWebVitals';*/\n\nclass PlayGround extends React.Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n        cardImage: ['angular2','vue','react','grunt','phantomjs','ember','babel','ionic','gulp','meteor','yeoman','yarn','nodejs','bower','browserify'],\n        duplicatedCards: [],\n        randomizedCards: [],\n        finalizedCards: [],\n        openedCards: []\n      }\n      this.start()\n    }\n    handleClick(name,index){\n      if(this.state.openedCards.length === 2){\n        setTimeout(() => {\n          this.check()\n        },750)\n      }else {\n        let framework = {\n          name,\n          index\n        }\n        let finalizedCards = this.state.finalizedCards\n        let cardImage = this.state.openedCards\n        finalizedCards[index].close = false\n        cardImage.push(framework)\n        this.setState({\n          openedCards: cardImage,\n          finalizedCards: finalizedCards\n        })\n        if(this.state.openedCards.length === 2){\n          setTimeout(() => {\n            this.check()\n          },750)\n        }\n      }\n    } \n    check(){\n      let finalizedCards = this.state.finalizedCards\n      if((this.state.openedCards[0].name === this.state.openedCards[1].name) && (this.state.openedCards[0].index !== this.state.openedCards[1].index)){\n        finalizedCards[this.state.openedCards[0].index].complete = true\n        finalizedCards[this.state.openedCards[1].index].complete = true\n      }else {\n        finalizedCards[this.state.openedCards[0].index].close = true\n        finalizedCards[this.state.openedCards[1].index].close = true\n      }\n      this.setState({\n        finalizedCards,\n        openedCards: []\n      })\n    }\n    start(){\n      let finalizedCards = [];\n      this.state.duplicatedCards = this.state.cardImage.concat(this.state.cardImage)\n      this.state.randomizedCards = this.shuffle(this.state.duplicatedCards)\n      this.state.randomizedCards.map((name) => {\n        finalizedCards.push({\n          name,\n          close: true,\n          complete: false,\n          fail: false\n        })\n      })\n      this.state.finalizedCards = finalizedCards\n    }\n    shuffle(array){\n      let currentIndex = array.length, temporaryValue, randomIndex;\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n      return array\n    }\n    render(){\n      \n      return (\n        <div className=\"playground\">\n            {\n              this.state.finalizedCards.map((framework, index) => {\n                return <Card framework={framework.name} click={() => {this.handleClick(framework.name,index)}} close={framework.close} complete={framework.complete}/>\n              })\n            }\n        </div>\n      )\n    }\n}\n\nclass Card extends React.Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n      \n      }\n    }\n  clicked(framework){\n    this.props.click(framework)\n  }\n  render(){\n    return (\n      <div className={\"card\" + (!this.props.close ? ' opened' : '') + (this.props.complete ? ' matched' : '')} onClick={() => this.clicked(this.props.framework)}>\n        <div className=\"front\">\n        </div>\n        <div className=\"back\">\n          <img src={\"https://raw.githubusercontent.com/samiheikki/javascript-guessing-game/master/static/logos/\" + this.props.framework + \".png\"} alt={this.props.framework}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render( <PlayGround/>, document.getElementById('app'))\n/*\nimport Card from './components/card'\nfunction App(){\n  return (\n    <div>\n      <h2>\n        Can you remember where the cards are ?\n      </h2>\n      <Card \n        id={1}\n        width={100}\n        height={100}\n        back={`../static/images/cards/spades_2.png`}\n        front={`../static/images/cards/spades_3.png`}\n        flipped={flipped.includes(1)}\n        handleClick={()=> handleClick(1)}\n        />\n    </div>\n  )\n}\nReactDOM.render( App, document.getElementById('root'))*/"],"sourceRoot":""}